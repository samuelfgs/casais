// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from 'react';
import {
  PlasmicInscricaoComp,
  DefaultInscricaoCompProps
} from './plasmic/casais/PlasmicInscricaoComp';
import { HTMLElementRefOf } from '@plasmicapp/react-web';
import { nanoid } from 'nanoid';
import { supabase } from '@/components/supabase/supabase';
import { useRouter } from 'next/router';

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface InscricaoCompProps extends Omit<DefaultInscricaoCompProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultInscricaoCompProps altogether and have
// total control over the props for your component.
export interface InscricaoCompProps extends DefaultInscricaoCompProps {}

function InscricaoComp_(
  props: InscricaoCompProps,
  ref: HTMLElementRefOf<'div'>
) {
  const router = useRouter();
  const [isLoading, setIsLoading] = React.useState(false);
  const handleSignup = async (dados: {
    nome: string;
    nascimento: string;
    email: string;
    doc: string;
    telefone: string;
    nome2: string;
    nascimento2: string;
  }) => {
    if (isLoading) return '';
    if (!dados.nome) {
      return 'Por favor preencha o campo nome';
    }
    if (!dados.nascimento) {
      return 'Por favor preencha o campo data de nascimento';
    }
    if (!dados.email) {
      return 'Por favor preencha o campo email';
    }
    if (!dados.doc) {
      return 'Por favor preencha o campo documento de identidade';
    }
    if (!dados.telefone) {
      return 'Por favor preencha o campo telefone';
    }
    if (!dados.nome2) {
      return 'Por favor preencha o campo nome do acompanhante';
    }
    if (!dados.nascimento2) {
      return 'Por favor preencha o campo data de nascimento do acompanhante';
    }
    setIsLoading(true);
    const mercadoPagoId = nanoid();
    const response = await fetch(
      `/api/mercadopago/preference`,
      {
        method: 'POST',
        body: JSON.stringify({
          name: dados.nome,
          email: dados.email,
          id: mercadoPagoId,
          items: [
            {
              id: 0,
              title: 'Retiro Nós Dois - Inscrição',
              description:
                'Ingressos Pista VIP para o Fernandinho em ISV - 06 de outubro',
              quantity: 1,
              currency_id: 'BRL',
              unit_price: +(process.env.NEXT_PUBLIC_PRICE ?? -1)
            }
          ]
        })
      }
    );
    const responseJson = await response.json();
    const newRow = await supabase
      .from('retiro')
      .insert({
        nome: dados.nome,
        nascimento: dados.nascimento,
        email: dados.email,
        doc: dados.doc,
        telefone: dados.telefone,
        nome2: dados.nome2,
        nascimento2: dados.nascimento2,
        mercadoPagoId
      })
      .select();
    if (newRow.error || newRow.data.length !== 1) {
      throw new Error(newRow.error?.message ?? 'Unknown error');
    }
    router.push(responseJson.response.init_point);
    return '';
  };

  return (
    <PlasmicInscricaoComp
      root={{ ref }}
      {...props}
      onSignup={handleSignup as any}
      isLoading={isLoading}
    />
  );
}

const InscricaoComp = React.forwardRef(InscricaoComp_);
export default InscricaoComp;
